import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { Mail, Phone, User, MessageSquare, X } from "lucide-react";
import { Separator } from "@/components/ui/separator";

interface UserDetailsProps {
  user: {
    id: string;
    username: string;
    full_name?: string;
    email: string;
    avatar_url?: string;
    role?: string;
    bio?: string;
    phone?: string;
  } | null;
  isOpen: boolean;
  onClose: () => void;
  isOnline: boolean;
}

export function UserDetails({ user, isOpen, onClose, isOnline }: UserDetailsProps) {
  if (!user) return null;

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader className="relative pb-2">
          <DialogTitle>Detalles del Usuario</DialogTitle>
          <button
            onClick={onClose}
            className="absolute right-4 top-4 p-1 rounded-full hover:bg-accent/80 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-background transition-colors"
          >
            <X className="h-4 w-4 text-muted-foreground hover:text-foreground transition-colors" />
            <span className="sr-only">Cerrar</span>
          </button>
        </DialogHeader>
        <div className="space-y-6">
          <div className="flex items-start space-x-4">
            <div className="relative">
              <Avatar className="h-16 w-16">
                <AvatarImage src={user.avatar_url} />
                <AvatarFallback className="text-lg">
                  {user.full_name?.[0] || user.username[0]}
                </AvatarFallback>
              </Avatar>
              {isOnline && (
                <span className="absolute bottom-0 right-0 h-3 w-3 rounded-full bg-green-500 border-2 border-background" />
              )}
            </div>
            <div className="space-y-1">
              <h4 className="text-lg font-semibold">{user.full_name || user.username}</h4>
              <div className="flex items-center space-x-2">
                <Badge variant="secondary">{user.role || "Usuario"}</Badge>
                {isOnline && <Badge variant="success">En línea</Badge>}
              </div>
            </div>
          </div>

          <Separator />

          <div className="space-y-4">
            <div className="flex items-center space-x-2 text-sm">
              <User className="h-4 w-4 text-muted-foreground" />
              <span className="text-muted-foreground">Username:</span>
              <span className="font-medium">@{user.username}</span>
            </div>

            <div className="flex items-center space-x-2 text-sm">
              <Mail className="h-4 w-4 text-muted-foreground" />
              <span className="text-muted-foreground">Email:</span>
              <span className="font-medium">{user.email}</span>
            </div>

            {user.phone && (
              <div className="flex items-center space-x-2 text-sm">
                <Phone className="h-4 w-4 text-muted-foreground" />
                <span className="text-muted-foreground">Teléfono:</span>
                <span className="font-medium">{user.phone}</span>
              </div>
            )}

            {user.bio && (
              <div className="space-y-2">
                <div className="flex items-center space-x-2 text-sm">
                  <MessageSquare className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">Bio:</span>
                </div>
                <p className="text-sm">{user.bio}</p>
              </div>
            )}
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}