import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Mail, Phone } from "lucide-react";
import { cn } from "@/lib/utils";

interface UserCardProps {
  user: User;
  isOnline?: boolean;
  onSelect?: (user: User) => void;
}

export function UserCard({ user, isOnline, onSelect }: UserCardProps) {
  return (
    <Card 
      className={cn(
        "group relative overflow-hidden",
        "bg-background/50 hover:bg-background",
        "hover:shadow-lg hover:shadow-accent/5",
        "transition-all duration-300 ease-in-out",
        "border border-border/50 hover:border-border",
        "cursor-pointer"
      )}
      onClick={() => onSelect?.(user)}
    >
      <div className="absolute inset-0 bg-gradient-to-br from-transparent via-transparent to-accent/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
      
      <CardContent className="p-4 relative">
        <div className="flex items-center space-x-4">
          <div className="relative shrink-0">
            <Avatar className="h-12 w-12 ring-2 ring-background shadow-sm">
              <AvatarImage src={user.avatarUrl || undefined} />
              <AvatarFallback className="bg-primary/5 text-primary">
                {user.fullName?.[0] || user.username[0]}
              </AvatarFallback>
            </Avatar>
            {isOnline && (
              <span className="absolute bottom-0 right-0 h-3 w-3 rounded-full bg-green-500 ring-2 ring-background" />
            )}
          </div>
          
          <div className="flex-1 space-y-2 min-w-0">
            <div className="flex items-center justify-between">
              <div className="flex flex-col">
                <p className="text-sm font-semibold leading-none">
                  {user.fullName || user.username}
                </p>
                <p className="text-xs text-muted-foreground mt-0.5">
                  @{user.username}
                </p>
              </div>
              {user.role && (
                <Badge variant="secondary" className="ml-2 bg-secondary/50 text-secondary-foreground">
                  {user.role}
                </Badge>
              )}
            </div>
            
            <div className="flex items-center space-x-3 text-sm text-muted-foreground">
              {user.email && (
                <TooltipProvider>
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <div className="flex items-center space-x-1 hover:text-foreground transition-colors">
                        <Mail className="h-3.5 w-3.5" />
                        <span className="hidden sm:inline truncate max-w-[150px]">
                          {user.email}
                        </span>
                      </div>
                    </TooltipTrigger>
                    <TooltipContent>{user.email}</TooltipContent>
                  </Tooltip>
                </TooltipProvider>
              )}
              
              {user.phone && (
                <TooltipProvider>
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <div className="flex items-center space-x-1 hover:text-foreground transition-colors">
                        <Phone className="h-3.5 w-3.5" />
                        <span className="hidden sm:inline">{user.phone}</span>
                      </div>
                    </TooltipTrigger>
                    <TooltipContent>{user.phone}</TooltipContent>
                  </Tooltip>
                </TooltipProvider>
              )}
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}